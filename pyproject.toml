[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eos"
description="Electric Optimization System: A python package for applying deep reinforcement learning to electric powertrain energy saving policy"
version = "1.0.0"
readme = "README.md"
keywords = ["deep learning", "deep reinforcement learning", "electric powertrain", "energy saving", "policy"]
authors= [
    {name = "Binjian Xin", email = "binjian.xin@newrizon.com"},
]
maintainers= [
    {name = "Binjian Xin", email = "binjian.xin@newrizon.com"},
]
license = {text = "BSD 3-Clause License"}
classifiers = [
    "Frameworks :: Pytest",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mypy",
    "pylint",
    "typing_inspect",
    "typeguard",
    "dacite",  # for dataclass from_dict
    "poetry",
    "tensorflow==2.14.0",
    "tensorflow-estimator",
    "tensorflow-probability",
    "tensorboard",
    "python-json-logger",
    "plotly",
    "Pillow",
    "pandas",
    "ordered-set",
    "opt-einsum",
    "jupyterlab",
    "jupyter-contrib-nbextensions",
    "notebook",
    "keras",
    "numpy",
    "scipy",
    "seaborn",
    "scikit-learn",
    "matplotlib",
    "pytest",
    "reportlab",
    "pymongo",
    "fastavro",
    "gitpython",
    "jupytext",
    "tqdm",
    "pandas-stubs",
    "nbstripout",
    "pip",
    "matplotlib-stubs",
    "pyarrow",
    "dask",
    "types-tensorflow",
    "pydantic==2.1.1",
    "typeguard",
    "poetry2conda",
    "rocketmq",
    "cutelog",
    "pyqt5==5.15.3",
    "pdoc3"
]

[tool.setuptools.packages.find]
exclude = ["data", "img", "stubs", "stubs.*", "stubs.*.*", "stubs_3rd_parties", "stubs_3rd_parties.*", "stubs_3rd_parties.*.*", "suite", "tests", "tests.*", "tests.*.*", "tests.*.*.*"]

[tool.poetry]
name = "eos"
version = "1.5.0"
description="Efficient Optimization System: A python package for applying efficient time sequence processing"
authors = ["binjian.xin <binjian.xin@newrizon.com>"]
maintainers = ["binjian.xin <binjian.xin@newrizon.com>"]
readme = "README.md"
license = "LICENSE"
repository = "ssh://git@gitlab.newrizon.work:2222/its/ai/eos.git"
keywords = ["deep learning", "deep reinforcement learning", "electric powertrain", "energy saving", "policy"]
classifiers = [
    "Frameworks :: Pytest",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["eos/*", "*.csv" ]
#virtualenvs.in-project = true

[tool.poetry.dependencies]
python = ">=3.10,<3.12"


[tool.poetry.dev-dependencies]
pytest = ">=7.4"

[tool.poetry.scripts]
my-script = "eos.eos.realtime_train_infer_ddpg:__main__"

[[tool.poetry.source]]
name = "official"
url = "https://pypi.org/simple"
default = true

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple"
secondary = true

[tool.poetry2conda]
name = "eos-conda"